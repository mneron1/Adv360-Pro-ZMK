
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define AS(keycode) &as LS(keycode) keycode


&mt {
   tapping-term-ms = <200>;
};


/ {
    behaviors {
        #include "macros.dtsi"

         as: auto_shift {
        compatible = "zmk,behavior-hold-tap";
        label = "AUTO_SHIFT";
        #binding-cells = <2>;
        tapping_term_ms = <200>;
        quick_tap_ms = <0>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
      AS(EQUAL)                AS(N1)               AS(N2)               AS(N3)                  AS(N4)                 AS(N5)        &tog 1                                                                                                                     &mo 3        AS(N6)     AS(N7)          AS(N8)             AS(N9)          AS(N0)          AS(MINUS)
      &kp TAB                  AS(SINGLE_QUOTE)     AS(COMMA)            AS(DOT)                 AS(P)                  AS(Y)         &kp DEL                                                                                                                    &none        AS(F)      AS(G)           AS(C)              AS(R)           AS(L)           AS(SLASH)
      &none                    AS(A)                AS(O)                AS(E)                   AS(U)                  AS(I)         &kp LC(LS(M))                     &kp LCTRL            &kp LALT                        &kp LGUI       &kp ESC              &none        AS(D)      AS(H)           AS(T)              AS(N)           AS(S)           AS(BACKSLASH)
      &LSHIFT                  AS(SEMICOLON)        AS(Q)                AS(J)                   AS(K)                  AS(X)                          &none            &none                &kp HOME     &none   &none      &none          &none      &none                  AS(B)      AS(M)           AS(W)              AS(V)           AS(Z)           &kp LSHIFT
      &tog 2                   AS(GRAVE)            &caps_word           &kp LEFT_ARROW          &kp RIGHT_ARROW                                       &kp BACKSPACE    &kp DEL              &kp END                         &kp LA(SPACE)  &kp ENTER  &kp SPACE                         &kp UP_ARROW    &kp DOWN_ARROW     AS(LBKT)        AS(RBKT)        &tog 2
            >;
        };
        
        keypad {                          
            bindings = <                          
      &none                    &kp EXCL             &kp AT_SIGN           &kp HASH               &kp DOLLAR             &PERCENT       &trans                                                                                                                     &mo 3       &none      &none            &none             &none           &none           &none
      &none                    &none                &none                 &kp LEFT_BRACE         &kp RIGHT_BRACE        &none          &none                                                                                                                      &none       &none      &kp KP_N7        &kp KP_N8         &kp KP_N9       &kp KP_MINUS    &none
      &none                    &none                &none                 &kp LEFT_PARENTHESIS   &kp RIGHT_PARENTHESIS  &none          &none                             &trans              &trans                           &trans        &trans                &none       &none      &kp KP_N4        &kp KP_N5         &kp KP_N6       &kp KP_PLUS     &none
      &none                    &none                &none                 &kp LEFT_BRACKET       &kp RIGHT_BRACKET      &none          &none           &none             &trans              &none        &none   &trans      &none         &none                             &none      &kp KP_N1        &kp KP_N2         &kp KP_N3       &kp KP_ENTER    &none
      &trans                   &none                &none                 &none                  &none                                                 &trans            &trans              &trans                           &trans        &trans  &trans                               &none            &kp KP_NUMBER_0   &kp KP_DOT      &none           &trans
            >;
        };

             fn {
            bindings = <
      &kp F1                   &kp F2               &kp F3                &kp F4                 &kpF5                  &kp F6         &tog 1                                                                                                                     &mo 3        &kp F7    &kp F8           &kp F9             &kp F10        &kp F11         &kp F12
      &kp TAB                  &none                &none                 &none                  &none                  &kp LC(Y)      &none                                                                                                                      &none        &none     &none            &none              &none          &none           &none
      &none                    &kp LC(A)            &none                 &none                  &none                  &none          &kp LC(LS(O))                     &kp LCTRL           &kp LALT                        &kp LGUI       &kp ES                &none        &none     &none            &none              &kp LC(LS(N))  &none           &none
      &none                    &none                &none                 &none                  &none                  &kp LC(X)                      &none             &none               &kp HOME     &none   &none      &none          &none      &none                   &none     &none            &none              &kp LC(V)      &kp LC(Z)       &none
      &tog 2                   &none                &none                 &none                  &none                                                 &kp LC(BACKSPACE) &kp DEL             &kp END                         &kp LA(SPACE)  &kp ENTER  &kp SPACE                         &none            &none              &none          &none           &tog 2
            >;
        };

        mod {
            bindings = <
      &none                   &bt BT_SEL 0          &bt BT_SEL 1          &bt BT_SEL 2           &bt BT_SEL 3           &bt BT_SEL 4 &none                                                                                                                       &trans              &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
      &none                   &none                 &none                 &none                  &none                  &none        &bootloader                                                                                                                 &bootloader         &none         &none         &none         &none         &none          &none
      &none                   &none                 &none                 &none                  &none                  &none        &rgb_ug RGB_MEFS_CMD 5   &bt BT_CLR           &bt BT_CLR                             &bt BT_CLR  &bt BT_CLR                 &rgb_ug RGB_MEFS_CMD 5 &none      &none         &none         &none         &none          &none
      &none                   &none                 &none                 &none                  &none                  &none         &none                   &none                &none              &none   &none       &none       &none                      &none               &none         &none         &none         &none         &none          &none
      &none                   &none                 &none                 &bl BL_INC             &bl BL_DEC                                   &rgb_ug RGB_TOG &bl BL_TOG           &none                                  &none       &bl BL_TOG  &rgb_ug RGB_TOG                                  &bl BL_INC    &bl BL_DEC    &none         &none          &none
            >;
        };
    };
};
